{"version":3,"sources":["App.js","serviceWorker.js","redux/rootReducer.js","index.js"],"names":["ItemUp","ItemDown","Select","unSelected","changing","setNewName","createName","connect","state","food","dispath","onUp","id","type","payload","onDown","onSelect","number","name","event","props","console","log","useState","setName","nameN","setNameN","className","onKeyPress","key","autoFocus","onBlur","onChange","target","value","defaultValue","placeholder","map","item","index","selected","onDoubleClick","hidden","disabled","onClick","length","Boolean","window","location","hostname","match","initialState","rootReducer","action","upItems","infoForButton","forEach","splice","downItems","trim","undefined","preventDefault","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02d585f0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './App.css';\n\nfunction App (props) {\n  console.log(props)\n  const [name, setName] = useState(\"\");\n  const [nameN, setNameN] = useState(\"\");\n  const {food, onSelect, onDown, onUp, changing, setNewName, createName} = props;\n  return (\n    <div className=\"App\">\n      {/* <form onSubmit={(event) => createName(nameN, event)}> */}\n        <input\n          onKeyPress={event => event.key === \"Enter\" ? createName(nameN) : \"\"} \n          className=\"input\"\n          autoFocus={true}\n          onBlur={() => createName(nameN)}\n          type=\"text\"\n          onChange={event => setNameN(event.target.value)}\n          defaultValue={nameN}\n          placeholder=\"Добавить качество Александры\"\n        ></input>\n      {/* </form> */}\n      {food.map((item, index) => {\n        return (\n          <>\n            <label\n              className={`list-group-item ${\n                item.selected ? \"active\" : \"\"\n              }`}\n              key={item.id}\n              onDoubleClick={() => changing(item.id)}\n              hidden={item.changing}\n            >\n              <input\n                hidden={true}\n                onChange={() => onSelect(item.id)}\n                type=\"checkbox\"\n              ></input>\n              <p hidden={item.changing}>\n                {index+1})&ensp;&ensp;&ensp;{item.name}\n              </p>\n            </label>\n            <input\n              className=\"input\"\n              autoFocus={true}\n              onBlur={() => setNewName(item.id, name || item.name)}\n              key={item.id + \"text\"}\n              hidden={!item.changing}\n              type=\"text\"\n              onChange={event => setName(event.target.value)}\n              defaultValue={item.name}\n            ></input>\n          </>\n        );\n      })}\n      <div className=\"btn-group\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={food[0].selected}\n          onClick={onUp}\n        >\n          onUp\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          disabled={food[food.length-1].selected}\n          onClick={onDown}\n        >\n          onDown\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    food: state.food\n  }\n}\n\nconst ItemUp = \"MOVE_ITEM_UP\";\nconst ItemDown = \"MOVE_ITEM_DOWN\";\nconst Select = \"SELECT\";\nconst unSelected = \"UNSELECTED\";\nconst changing = \"CHANGING\";\nconst setNewName = \"SET_NAME\";\nconst createName = \"CREATE_NAME\";\n\nfunction mapDispathToProps(dispath) {\n  return {\n    onUp: id => dispath({type: ItemUp, payload: id}),\n    onDown: id => dispath({type: ItemDown, payload: id}),\n    onSelect: number => dispath({type: Select, payload: number}),\n    unSelected: () => dispath({type: unSelected}),\n    changing: number => dispath({type: changing, payload: number}),\n    setNewName: (id, name) => dispath({type: setNewName, payload: {id, name}}),\n    createName: (name, event) => dispath({type: createName, payload: name, event}),\n  } \n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst ItemUp = \"MOVE_ITEM_UP\";\r\nconst ItemDown = \"MOVE_ITEM_DOWN\";\r\nconst Select = \"SELECT\";\r\nconst unSelected = \"UNSELECTED\";\r\nconst changing = \"CHANGING\";\r\nconst setNewName = \"SET_NAME\";\r\nconst createName = \"CREATE_NAME\";\r\n\r\nconst initialState = { food: [\r\n  { name: \" Честная\", id: 0, selected: false, changing: false, },\r\n  { name: \" Умная\", id: 1, selected: false, changing: false, },\r\n  { name: \" Добрая\", id: 2, selected: false, changing: false, },\r\n  { name: \" Красивая\", id: 3, selected: false, changing: false, },\r\n  { name: \" Общительная\", id: 4, selected: false, changing: false, },\r\n  { name: \" Веселая\", id: 5, selected: false, changing: false, },\r\n  { name: \" Обворожительная \", id: 6, selected: false, changing: false, },\r\n  { name: \" Спокойная\", id: 7, selected: false, changing: false, },\r\n  { name: \" Чудесная\", id: 8, selected: false, changing: false, },\r\n  { name: \"Непоколебима\", id: 9, selected: false, changing: false, },\r\n], };\r\n\r\nfunction rootReducer (state = initialState, action) {\r\n  console.log(state)\r\n    switch (action.type) {\r\n\r\n    case ItemUp:\r\n      const upItems = [...state.food];\r\n      const infoForButton = {...state.infoForButton};\r\n      state.food.forEach( (item, index) => {\r\n        if(item.selected && index !== 0) {\r\n          upItems[index-1] = upItems.splice(index, 1, upItems[index-1])[0];\r\n        }\r\n      });\r\n      return {\r\n        food: [...upItems],\r\n        infoForButton: {...infoForButton}, \r\n      };\r\n\r\n    case ItemDown:\r\n      const downItems = [...state.food];\r\n      for (let index = downItems.length-1; index >= 0; index--) {\r\n        let item = state.food[index];\r\n        if (item.selected && index !== downItems.length-1) {\r\n          downItems[index+1] = downItems.splice(index, 1, downItems[index+1])[0];\r\n        }\r\n      };\r\n      return {\r\n        food: [...downItems],\r\n      };\r\n\r\n    case Select:\r\n      return {\r\n        food: [...state.food].map( item => {\r\n          if(item.id === action.payload) {\r\n            item.selected = !item.selected;\r\n          }\r\n          return item;\r\n        } )\r\n      };\r\n\r\n    case unSelected:\r\n      return {\r\n        food: [...state.food].map( item => {\r\n          return {...item, selected: false};\r\n        } )\r\n      };\r\n    \r\n    case changing:\r\n      return {\r\n        food: [...state.food].map( item => {\r\n          if(item.id === action.payload) { \r\n          return {\r\n            ...item, changing: true};\r\n          } else {\r\n            return {...item}\r\n          }\r\n        } )\r\n      };\r\n\r\n    case setNewName:\r\n      return {\r\n        food: [...state.food].map( item => {\r\n          if(item.id === action.payload.id) { \r\n          return {\r\n            ...item, name: action.payload.name, changing: false};\r\n          } else {\r\n            return {...item}\r\n          }\r\n        } )\r\n      };\r\n    case createName:\r\n      console.log(action)\r\n      const name = action.payload.trim();\r\n      if(name !== \"\") {\r\n        if(action.payload.event !== undefined) {\r\n          action.payload.event.preventDefault()\r\n        }\r\n        return {\r\n          food: [...state.food, {name: name, id: state.food[state.food.length-1].id+1, selected: false, changing: false,}]\r\n        };\r\n      } else {\r\n        return {\r\n          food: [...state.food]\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\"\nimport rootReducer from \"./redux/rootReducer\"\nimport { Provider } from \"react-redux\"\n\nconst store = createStore(rootReducer);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}